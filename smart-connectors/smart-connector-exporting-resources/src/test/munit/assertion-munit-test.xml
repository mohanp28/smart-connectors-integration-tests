<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munitext="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core      http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/munit     http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
        http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">

    <munit:config name="assertion-test.xml"/>

    <munit:test name="test-set-payload-invoking-directly-dw-fun-flow" description="">
        <munit:execution>
            <flow-ref name="set-payload-invoking-directly-dw-fun-flow" />
        </munit:execution>
        <munit:validation>
            <munitext:assert-that expression="#[output application/java --- payload]" is="#[MunitTools::equalTo(5)]" message="Oops this should have been true"/>
        </munit:validation>
    </munit:test>

    <!--flow refs below-->
    <flow name="set-payload-invoking-directly-dw-fun-flow">
        <!-- showing that the application also has access to the DW functions located in the weirdFolder/myMappings.dwl
        file defined in the module's code-->
        <set-payload value="#[module_exporting_resources::weirdFolder::myMappings::five()]"/>
    </flow>
</mule>
